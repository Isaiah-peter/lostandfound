// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.0
// source: lost_item_image.sql

package db

import (
	"context"
	"database/sql"
)

const createImage = `-- name: CreateImage :one
INSERT INTO lost_items_images (
    lost_item_id,
    lost_item_image
) VALUES ($1, $2) RETURNING id, lost_item_id, lost_item_image, created_at
`

type CreateImageParams struct {
	LostItemID    sql.NullInt32  `json:"lost_item_id"`
	LostItemImage sql.NullString `json:"lost_item_image"`
}

func (q *Queries) CreateImage(ctx context.Context, arg CreateImageParams) (LostItemsImage, error) {
	row := q.db.QueryRowContext(ctx, createImage, arg.LostItemID, arg.LostItemImage)
	var i LostItemsImage
	err := row.Scan(
		&i.ID,
		&i.LostItemID,
		&i.LostItemImage,
		&i.CreatedAt,
	)
	return i, err
}

const deleteImage = `-- name: DeleteImage :exec
DELETE FROM lost_items_images
WHERE id = $1
`

func (q *Queries) DeleteImage(ctx context.Context, id int32) error {
	_, err := q.db.ExecContext(ctx, deleteImage, id)
	return err
}

const deleteImageByLID = `-- name: DeleteImageByLID :exec
DELETE FROM lost_items_images
WHERE lost_item_id = $1
`

func (q *Queries) DeleteImageByLID(ctx context.Context, lostItemID sql.NullInt32) error {
	_, err := q.db.ExecContext(ctx, deleteImageByLID, lostItemID)
	return err
}

const getImage = `-- name: GetImage :one
SELECT id, lost_item_id, lost_item_image, created_at FROM lost_items_images
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetImage(ctx context.Context, id int32) (LostItemsImage, error) {
	row := q.db.QueryRowContext(ctx, getImage, id)
	var i LostItemsImage
	err := row.Scan(
		&i.ID,
		&i.LostItemID,
		&i.LostItemImage,
		&i.CreatedAt,
	)
	return i, err
}

const getImageByLID = `-- name: GetImageByLID :one
SELECT id, lost_item_id, lost_item_image, created_at FROM lost_items_images
WHERE lost_item_id = $1 LIMIT 5
`

func (q *Queries) GetImageByLID(ctx context.Context, lostItemID sql.NullInt32) (LostItemsImage, error) {
	row := q.db.QueryRowContext(ctx, getImageByLID, lostItemID)
	var i LostItemsImage
	err := row.Scan(
		&i.ID,
		&i.LostItemID,
		&i.LostItemImage,
		&i.CreatedAt,
	)
	return i, err
}
